{"version":3,"sources":["../../../../../../../../src/lib/client/src/app/dashboard/memo/components/ListItem.js"],"names":["ListItem","props","_bind","state","isEditing","input","todo","_onSave","text","isComplete","_onToggleComplete","_onDoubleClick","_onDeleteClick","toggleComplete","destroy","id","setState","updateText","propTypes","PropTypes","object","isRequired"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,Q;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAGjB,UAAKC,KAAL,CAAW,mBAAX,EAAgC,gBAAhC,EAAkD,gBAAlD,EAAoE,SAApE;AACA,UAAKC,KAAL,GAAa,EAAEC,WAAW,KAAb,EAAb;AAJiB;AAKlB;;;;6BAEQ;AACP,UAAIC,QAAQ,IAAZ;AACA,UAAMC,OAAO,KAAKL,KAAL,CAAWK,IAAxB;;AAEA,UAAI,KAAKH,KAAL,CAAWC,SAAf,EAA0B;AACxBC,gBACE;AACE,kBAAS,KAAKE,OADhB;AAEE,iBAAQD,KAAKE;AAFf,UADF;AAMD;;AAED,aACE;AAAA;AAAA,UAAI,WAAY,0BAAW;AACvB,2BAAe,CAACF,KAAKG,UADE;AAEvB,4BAAgBH,KAAKG,UAFE;AAGvB,4BAAgB,KAAKN,KAAL,CAAWC;AAHJ,WAAX,CAAhB;AAKE;AACE,oBAAW,KAAKM,iBADlB;AAEE,mBAAUJ,KAAKG,UAFjB;AAGE,gBAAK;AAHP,UALF;AAAA;AAWE;AAAA;AAAA,YAAO,eAAgB,KAAKE,cAA5B;AACIL,eAAKE;AADT,SAXF;AAAA;AAeE;AAAA;AAAA,YAAQ,SAAU,KAAKI,cAAvB,EAAwC,MAAK,QAA7C;AAAA;AAAA,SAfF;AAAA;AAiBIP;AAjBJ,OADF;AAqBD;;;wCAEmB;AAClB,kCAAkBQ,cAAlB,CAAiC,KAAKZ,KAAL,CAAWK,IAA5C;AACD;;;qCAEgB;AACf,kCAAkBQ,OAAlB,CAA0B,KAAKb,KAAL,CAAWK,IAAX,CAAgBS,EAA1C;AACD;;;qCAEgB;AACf,WAAKC,QAAL,CAAc,EAAEZ,WAAW,IAAb,EAAd;AACD;;;4BAEOI,I,EAAM;AACZ,kCAAkBS,UAAlB,CAA6B,KAAKhB,KAAL,CAAWK,IAAX,CAAgBS,EAA7C,EAAiDP,IAAjD;;AAEA,WAAKQ,QAAL,CAAc,EAAEZ,WAAW,KAAb,EAAd;AACD;;;;;;AAGHJ,SAASkB,SAAT,GAAqB;AACnBZ,QAAM,gBAAMa,SAAN,CAAgBC,MAAhB,CAAuBC;AADV,CAArB;;kBAIerB,Q","file":"ListItem.js","sourcesContent":["import memoActionCreator from '../actions/memoActionCreator';\nimport TextInput from './TextInput';\nimport BaseComponent from '../../../../common/components/BaseComponent';\nimport React from 'react';\nimport classNames from 'classnames';\n\nclass ListItem extends BaseComponent {\n\n  constructor(props) {\n    super(props);\n\n    this._bind('_onToggleComplete', '_onDeleteClick', '_onDoubleClick', '_onSave');\n    this.state = { isEditing: false };\n  }\n\n  render() {\n    let input = null;\n    const todo = this.props.todo;\n\n    if (this.state.isEditing) {\n      input = (\n        <TextInput\n          onSave={ this._onSave }\n          value={ todo.text }\n        />\n      );\n    }\n\n    return (\n      <li className={ classNames({\n          'text-danger': !todo.isComplete,\n          'text-success': todo.isComplete,\n          'text-warning': this.state.isEditing\n        }) }>\n        <input\n          onChange={ this._onToggleComplete }\n          checked={ todo.isComplete }\n          type=\"checkbox\"\n        />\n        &nbsp;&nbsp;\n        <label onDoubleClick={ this._onDoubleClick }>\n          { todo.text }\n        </label>\n        &nbsp;&nbsp;\n        <button onClick={ this._onDeleteClick } type=\"button\">delete</button>\n        &nbsp;&nbsp;&nbsp;\n        { input }\n      </li>\n    );\n  }\n\n  _onToggleComplete() {\n    memoActionCreator.toggleComplete(this.props.todo);\n  }\n\n  _onDeleteClick() {\n    memoActionCreator.destroy(this.props.todo.id);\n  }\n\n  _onDoubleClick() {\n    this.setState({ isEditing: true });\n  }\n\n  _onSave(text) {\n    memoActionCreator.updateText(this.props.todo.id, text);\n\n    this.setState({ isEditing: false });\n  }\n\n}\nListItem.propTypes = {\n  todo: React.PropTypes.object.isRequired\n};\n\nexport default ListItem;\n"]}