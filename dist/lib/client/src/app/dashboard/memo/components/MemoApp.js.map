{"version":3,"sources":["../../../../../../../../src/lib/client/src/app/dashboard/memo/components/MemoApp.js"],"names":["_getState","allTodos","getAll","areAllComplete","MemoApp","props","_bind","state","addChangeListener","_onChange","removeChangeListener","setState"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;AAIA,SAASA,SAAT,GAAqB;AACnB,SAAO;AACLC,cAAU,oBAAUC,MAAV,EADL;AAELC,oBAAgB,oBAAUA,cAAV;AAFX,GAAP;AAID;;IAEKC,O;;;AAEJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kHACXA,KADW;;AAGjB,UAAKC,KAAL,CAAW,WAAX;AACA,UAAKC,KAAL,GAAaP,WAAb;AAJiB;AAKlB;;;;wCAEmB;AAClB,0BAAUQ,iBAAV,CAA4B,KAAKC,SAAjC;AACD;;;2CAEsB;AACrB,0BAAUC,oBAAV,CAA+B,KAAKD,SAApC;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA,UAAK,WAAU,KAAf;AACE;AAAA;AAAA,YAAK,WAAU,0BAAf;AACE,+DADF;AAEE,mDAFF;AAGE;AACE,sBAAW,KAAKF,KAAL,CAAWN,QADxB;AAEE,4BAAiB,KAAKM,KAAL,CAAWJ;AAF9B,YAHF;AAOE,4DAAQ,UAAW,KAAKI,KAAL,CAAWN,QAA9B;AAPF;AADF,OADF;AAaD;;;gCAEW;AACV,WAAKU,QAAL,CAAcX,WAAd;AACD;;;;;;kBAIYI,O","file":"MemoApp.js","sourcesContent":["import memoStore from '../stores/memoStore';\nimport Header from './Header';\nimport MainSection from './MainSection';\nimport Footer from './Footer';\nimport BaseComponent from '../../../../common/components/BaseComponent';\nimport React from 'react';\n\n/*\n * A private method. It should only be used by `setState()` and `getInitialState()` to sync with\n * the data in the Flux's store.\n */\nfunction _getState() {\n  return {\n    allTodos: memoStore.getAll(),\n    areAllComplete: memoStore.areAllComplete()\n  };\n}\n\nclass MemoApp extends BaseComponent {\n\n  constructor(props) {\n    super(props);\n\n    this._bind('_onChange');\n    this.state = _getState();\n  }\n\n  componentDidMount() {\n    memoStore.addChangeListener(this._onChange);\n  }\n\n  componentWillUnmount() {\n    memoStore.removeChangeListener(this._onChange);\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-lg-offset-4 col-lg-8\">\n          <Header />\n          <br />\n          <MainSection\n            allTodos={ this.state.allTodos }\n            areAllComplete={ this.state.areAllComplete }\n          />\n          <Footer allTodos={ this.state.allTodos } />\n        </div>\n      </div>\n    );\n  }\n\n  _onChange() {\n    this.setState(_getState());\n  }\n\n}\n\nexport default MemoApp;\n"]}