{"version":3,"sources":["../../../../../../../../src/lib/client/src/app/dashboard/memo/components/TextInput.js"],"names":["enterKeyCode","TextInput","props","_bind","state","_onSave","_onChange","_onKeyDown","className","id","placeholder","value","onSave","setState","event","target","keyCode","popTypes","PropTypes","func","isRequired","string"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,eAAe,EAArB;;AAEA;;IACMC,S;;;AAEJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAGjB,UAAKC,KAAL,CAAW,SAAX,EAAsB,WAAtB,EAAmC,YAAnC;AACA,UAAKC,KAAL,GAAaF,KAAb;AAJiB;AAKlB;;;;6BAEQ;AACP,aACE;AACE,gBAAS,KAAKG,OADhB;AAEE,kBAAW,KAAKC,SAFlB;AAGE,mBAAY,KAAKC,UAHnB;AAIE,mBAAY,KAAKL,KAAL,CAAWM,SAJzB;AAKE,YAAK,KAAKN,KAAL,CAAWO,EALlB;AAME,qBAAc,KAAKP,KAAL,CAAWQ,WAN3B;AAOE,eAAQ,KAAKN,KAAL,CAAWO,KAPrB;AAQE,mBAAY,IARd;AASE,cAAK;AATP,QADF;AAaD;;;8BAES;AACR,WAAKT,KAAL,CAAWU,MAAX,CAAkB,KAAKR,KAAL,CAAWO,KAA7B;;AAEA,WAAKE,QAAL,CAAc,EAAEF,OAAO,EAAT,EAAd;AACD;;;8BAESG,K,EAAO;AACf,WAAKD,QAAL,CAAc,EAAEF,OAAOG,MAAMC,MAAN,CAAaJ,KAAtB,EAAd;AACD;;;+BAEUG,K,EAAO;AAChB,UAAIA,MAAME,OAAN,KAAkBhB,YAAtB,EAAoC;AAClC,aAAKK,OAAL;AACD;AACF;;;;;;AAGHJ,UAAUgB,QAAV,GAAqB;AACnBL,UAAQ,gBAAMM,SAAN,CAAgBC,IAAhB,CAAqBC,UADV;AAEnBZ,aAAW,gBAAMU,SAAN,CAAgBG,MAFR;AAGnBZ,MAAI,gBAAMS,SAAN,CAAgBG,MAHD;AAInBX,eAAa,gBAAMQ,SAAN,CAAgBG,MAJV;AAKnBV,SAAO,gBAAMO,SAAN,CAAgBG;AALJ,CAArB;;kBAQepB,S","file":"TextInput.js","sourcesContent":["import BaseComponent from '../../../../common/components/BaseComponent';\nimport React from 'react';\n\nconst enterKeyCode = 13;\n\n// A React component class for generic text input.\nclass TextInput extends BaseComponent {\n\n  constructor(props) {\n    super(props);\n\n    this._bind('_onSave', '_onChange', '_onKeyDown');\n    this.state = props;\n  }\n\n  render() {\n    return (\n      <input\n        onBlur={ this._onSave }\n        onChange={ this._onChange }\n        onKeyDown={ this._onKeyDown }\n        className={ this.props.className }\n        id={ this.props.id }\n        placeholder={ this.props.placeholder }\n        value={ this.state.value }\n        autoFocus={ true }\n        type=\"text\"\n      />\n    );\n  }\n\n  _onSave() {\n    this.props.onSave(this.state.value);\n\n    this.setState({ value: '' });\n  }\n\n  _onChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  _onKeyDown(event) {\n    if (event.keyCode === enterKeyCode) {\n      this._onSave();\n    }\n  }\n\n}\nTextInput.popTypes = {\n  onSave: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string,\n  id: React.PropTypes.string,\n  placeholder: React.PropTypes.string,\n  value: React.PropTypes.string\n};\n\nexport default TextInput;\n"]}