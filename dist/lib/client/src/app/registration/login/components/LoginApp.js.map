{"version":3,"sources":["../../../../../../../../src/lib/client/src/app/registration/login/components/LoginApp.js"],"names":["_getState","isLoggedIn","LoginApp","props","_bind","state","addChangeListener","_onChange","removeChangeListener","paddingTop","_onSubmit","setState","event","email","password","preventDefault","login"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;AAIA,SAASA,SAAT,GAAqB;AACnB,SAAO;AACLC,gBAAY,qBAAWA;AADlB,GAAP;AAGD;;IAEKC,Q;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAGjB,UAAKC,KAAL,CAAW,WAAX,EAAwB,WAAxB;AACA,UAAKC,KAAL,GAAaL,WAAb;AAJiB;AAKlB;;;;wCAEmB;AAClB,2BAAWM,iBAAX,CAA6B,KAAKC,SAAlC;AACD;;;2CAEsB;AACrB,2BAAWC,oBAAX,CAAgC,KAAKD,SAArC;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAU,KAAf;AACE;AAAA;AAAA,cAAK,WAAU,WAAf;AACE,mDAAK,OAAQ,EAACE,YAAY,KAAb,EAAb;AADF;AADF,SADF;AAME;AAAA;AAAA,YAAK,WAAU,KAAf;AACE;AAAA;AAAA,cAAK,WAAU,0BAAf;AACE;AAAA;AAAA,gBAAK,WAAU,qBAAf;AACE;AAAA;AAAA,kBAAK,WAAU,2BAAf;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,sBAAM,WAAU,qBAAhB;AAAA;AAAA;AAAJ;AADF,eADF;AAIE;AAAA;AAAA,kBAAK,WAAU,YAAf;AACE,qEAAW,UAAW,KAAKC,SAA3B,GADF;AAEE;AAAA;AAAA,oBAAK,WAAU,0BAAf;AACE;AAAA;AAAA,sBAAG,WAAU,YAAb;AAA0B;AAAA;AAAA,wBAAG,MAAK,2CAAR;AAAA;AAAA;AAA1B,mBADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAFF;AAFF;AAJF;AADF;AADF;AANF,OADF;AAyBD;;;gCAEW;AACV,WAAKC,QAAL,CAAcX,WAAd;AACD;;;8BAESY,K,EAAOC,K,EAAOC,Q,EAAU;AAChC;AACAF,YAAMG,cAAN;;AAEA,mCAAmBC,KAAnB,CAAyBH,KAAzB,EAAgCC,QAAhC;AACD;;;;;;kBAIYZ,Q","file":"LoginApp.js","sourcesContent":["import loginStore from '../stores/loginStore';\nimport loginActionCreator from '../actions/loginActionCreator';\nimport LoginForm from './LoginForm';\nimport BaseComponent from '../../../../common/components/BaseComponent';\nimport React from 'react';\n\n/*\n * A private method. It should only be used by `setState()` and `getInitialState()` to sync with\n * the data in the Flux store.\n */\nfunction _getState() {\n  return {\n    isLoggedIn: loginStore.isLoggedIn,\n  };\n}\n\nclass LoginApp extends BaseComponent {\n\n  constructor(props) {\n    super(props);\n\n    this._bind('_onChange', '_onSubmit');\n    this.state = _getState();\n  }\n\n  componentDidMount() {\n    loginStore.addChangeListener(this._onChange);\n  }\n\n  componentWillUnmount() {\n    loginStore.removeChangeListener(this._onChange);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-lg-12'>\n            <div style={ {paddingTop: '15%'} }></div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-lg-offset-4 col-lg-4'>\n            <div className='panel panel-default'>\n              <div className='panel-heading text-center'>\n                <h4><span className='label label-primary'>The English University</span></h4>\n              </div>\n              <div className='panel-body'>\n                <LoginForm onSubmit={ this._onSubmit } />\n                <div className='panel-footer text-center'>\n                  <p className='text-muted'><a href='mailto:inquiries@TheEnglishUniversity.com'>Development Support</a></p>\n                  <p>v0.0.0</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  _onChange() {\n    this.setState(_getState());\n  }\n\n  _onSubmit(event, email, password) {\n    // Prevents browser's default navigation (page refresh).\n    event.preventDefault();\n\n    loginActionCreator.login(email, password);\n  }\n\n}\n\nexport default LoginApp;\n"]}