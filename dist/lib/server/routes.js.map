{"version":3,"sources":["../../../src/lib/server/routes.js"],"names":["routes","require","ReactDOMServer","React","Router","path","setupRoutes","app","get","req","res","send","route","render","err","status","json","env","sendFile","resolve","__dirname","module","exports"],"mappings":";;AAAA,IAAMA,SAASC,QAAQ,0BAAR,CAAf;AACA,IAAMC,iBAAiBD,QAAQ,kBAAR,CAAvB;AACA,IAAME,QAAQF,QAAQ,OAAR,CAAd;AACA,IAAMG,SAASH,QAAQ,cAAR,CAAf;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;;AAEA,SAASK,WAAT,CAAqBC,GAArB,EAA0B;AACxB;AACAA,MAAIC,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAEA,QAAIC,IAAJ,CAAS,IAAT;AAAiB,GAAlD;AACAJ,MAAIC,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc,CAAE,CAAnC;;AAEA;;AAEA;AACAH,MAAIK,KAAJ,CAAU,qBAAV,EACGJ,GADH,CACO,UAACC,GAAD,EAAMC,GAAN;AAAA,WAAcA,IAAIG,MAAJ,CAAW,KAAX,EAAkB,UAACC,GAAD,EAAS;AAC5C,UAAIA,GAAJ,EAAS;AACP,eAAOJ,IAAIK,MAAJ,CAAW,GAAX,EACJC,IADI,CACCF,GADD,CAAP;AAED;AACD,aAAOJ,IAAIK,MAAJ,CAAW,GAAX,EACJF,MADI,CACG,KADH,CAAP;AAED,KAPkB,CAAd;AAAA,GADP;;AAUA;AACAN,MAAIK,KAAJ,CAAU,IAAV,EACGJ,GADH,CACO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMA,QAAMO,MAAMV,IAAIC,GAAJ,CAAQ,KAAR,CAAZ,CA7BiB,CA6BW;;AAE5B,QAAIS,QAAQ,YAAZ,EAA0B;AACxBP,UAAIQ,QAAJ,CAAab,KAAKc,OAAL,CAAaC,SAAb,EAAwB,eAAxB,EAAyC,aAAzC,CAAb;AACD,KAFD,MAEO;AACLV,UAAIQ,QAAJ,CAAab,KAAKc,OAAL,CAAaC,SAAb,EAAwB,kBAAxB,EAA4C,aAA5C,CAAb;AACD;AAEF,GAtCH;AAuCD;;AAEDC,OAAOC,OAAP,GAAiBA,UAAUhB,WAA3B","file":"routes.js","sourcesContent":["const routes = require('../client/src/app/routes');\nconst ReactDOMServer = require('react-dom/server');\nconst React = require('react');\nconst Router = require('react-router');\nconst path = require('path');\n\nfunction setupRoutes(app) {\n  // [TODO]\n  app.get('/ping', (req, res) => { res.send('OK'); });\n  app.get('/health', (req, res) => {});\n\n  //app.use('/auth', require('./auth'));\n\n  // All not-found API endpoints should return an custom 404 page.\n  app.route('/:url(app|assets)/*')\n    .get((req, res) => res.render('404', (err) => {\n      if (err) {\n        return res.status(404)\n          .json(err);\n      }\n      return res.status(404)\n        .render('404');\n    }));\n\n  // All other endpoints should redirect to the index.html.\n  app.route('/*')\n    .get((req, res) => {\n      /*\n       * [Note] Server-side rendering - normal version, implemented as the following:\n       * ```\n       * const MyComponent =\n       *   React.createFactory(require('../client/src/app/memo/components/MemoApp.js'));\n       * const markup = ReactDOMServer.renderToString( MyComponent() );\n       * res.render('index', { markup });\n       * ```\n       */\n\n      ///Server-side rendering - React Router version, implemented as the following:\n      //const router = Router.createRoutes({ routes, location: req.url });\n      //\n      //router.render((Handler, state) => {\n      //  console.log('SSR:', _.has(req, 'session.userID'));\n      //\n      //  const markup =\n      //    ReactDOMServer.renderToString(<Handler isLoggedIn={ _.has(req, 'session.userID') } />);\n      //  res.cookie('login_tmp', _.has(req, 'session.userID') ? 'yes' : 'no');\n      //  res.render('index', { markup });\n      //});\n\n      /*\n       * [Note] Client-side Rendering, implemented as the following:\n       * ```\n       * res.sendFile(path.resolve(config.get('root'), 'client/static', 'index2.html'));\n       * ```\n       */\n      const env = app.get('env'); // Same as `process.env.NODE_ENV`.\n\n      if (env === 'production') {\n        res.sendFile(path.resolve(__dirname, '../../../dist', 'index2.html'));\n      } else {\n        res.sendFile(path.resolve(__dirname, '../client/static', 'index2.html'));\n      }\n\n    });\n}\n\nmodule.exports = exports = setupRoutes;\n"]}